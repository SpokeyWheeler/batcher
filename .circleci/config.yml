# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2.1
orbs:
  gor: hubci/goreleaser@1.0.0
  codecov: codecov/codecov@1.1.3
  snyk: snyk/snyk@0.0.12
  queue: eddiewebb/queue@1.5.0
workflows:
  main:
    jobs:
      - build
      - test:
          requires:
            - build
      - gor/release:
          requires:
            - test
          version: 0.147.1
          go-version: 1.15.5
          dry-run: false
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d+\.\d+\.\d+$/
  # release:
    # jobs:
      # - queue/block_workflow:
          # time: '10'
      # - test:
          # requires:
            # - queue/block_workflow
          # filters:
            # branches:
              # ignore: /.*/
            # tags:
              # only: /^v\d+\.\d+\.\d+$/
jobs:
  build:
    docker:
      # specify the version
      - image: cimg/go:1.15.6
        auth:
          username: $DOCKERUSER
          password: $DOCKERPASS

    working_directory: ~/go/src/github.com/SpokeyWheeler/batcher
    steps:
      - checkout
      - run: go get -v -t -d ./...
      - run: go get github.com/caarlos0/svu
      - run: svu c ; svu n
      - run: git add --all; export VER=$( svu n ) ; echo $VER ; git tag $VER ; git push origin --tags ; go build -i -v -ldflags="-X main.version=$VER" github.com/SpokeyWheeler/batcher

  test:
    docker:
      - image: 'cimg/go:1.15.6'
        auth:
          username: $DOCKERUSER
          password: $DOCKERPASS

      - image: circleci/postgres:9.6-alpine-ram
        auth:
          username: $DOCKERUSER
          password: $DOCKERPASS
        environment:
          POSTGRES_USER: btest
          POSTGRES_DB: batchertestdb
          TEST_DATABASE_URL: postgresql://btest@localhost:5432/postgres
          PGDATA: /var/lib/postgresql/9.6/main

      - image: circleci/mysql:latest-ram
        auth:
          username: $DOCKERUSER
          password: $DOCKERPASS
        environment:
          MYSQL_ROOT_PASSWORD: btestroot
          MYSQL_DATABASE: batchertestdb
          MYSQL_USER: btest
          MYSQL_PASSWORD: btest

    steps:
      - checkout
      - run: go get -v -t -d ./...
      - run: go get github.com/caarlos0/svu
      - run: svu c ; svu n
      - run: VER=$( svu n )
      - run: go build -i -v -ldflags="-X main.version=$VER" github.com/SpokeyWheeler/batcher
      # - run: export VER=$( svu n ) ; echo $VER ; git tag $VER ; git push origin --tags ; go build -i -v -ldflags="-X main.version=$VER" github.com/SpokeyWheeler/batcher
      - run:
          name: "Create a temp directory for artifacts"
          command: |
            mkdir -p /tmp/artifacts
      - run:
          command: |
            go test -coverprofile=c.out
            go tool cover -html=c.out -o coverage.html
            mv coverage.html /tmp/artifacts
      - store_artifacts:
          path: /tmp/artifacts
      - run: sudo apt update -y
      - run: sudo apt install -y wget postgresql-client mysql-client
      - run: wget -qO- https://binaries.cockroachdb.com/cockroach-v20.2.3.linux-amd64.tgz | tar xvz
      - run: sudo cp -i cockroach-v20.2.3.linux-amd64/cockroach /usr/local/bin/
      - run: cd test; ./create_pops.sh; cd ..
      - run: cd test; ./cockroach.sh; cd ..
      - run: cd test; ./postgres.sh; cd ..
      - run: cd test; ./mysql.sh; cd ..
      - codecov/upload:
          file: /tmp/artifacts/coverage.html
      - snyk/scan
      - save_cache:
          key: go-mod-v1
          paths:
            - /go/pkg/mod

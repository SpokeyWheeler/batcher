jobs:
  build:
    docker:
      - image: cimg/go:1.15.6
        auth:
          username: $DOCKERUSER
          password: $DOCKERPASS

    steps:
      - checkout
      - run: go get -v -t -d . ./...
      - run: go get github.com/caarlos0/svu
      - run: svu c ; svu n
      - run: export VER=$( svu n ) ; echo $VER ; go build -i -v -ldflags="-X main.version=$VER" github.com/SpokeyWheeler/batcher
      - run: batcher version
    working_directory: ~/go/src/github.com/SpokeyWheeler/batcher

  test:
    docker:
      - image: 'cimg/go:1.15.6'
        auth:
          username: $DOCKERUSER
          password: $DOCKERPASS

      - image: circleci/postgres:9.6-alpine-ram
        auth:
          username: $DOCKERUSER
          password: $DOCKERPASS
        environment:
          POSTGRES_USER: btest
          POSTGRES_DB: batchertestdb
          TEST_DATABASE_URL: postgresql://btest@localhost:5432/postgres
          PGDATA: /var/lib/postgresql/9.6/main

      - image: circleci/mysql:latest-ram
        auth:
          username: $DOCKERUSER
          password: $DOCKERPASS
        environment:
          MYSQL_ROOT_PASSWORD: btestroot
          MYSQL_DATABASE: batchertestdb
          MYSQL_USER: btest
          MYSQL_PASSWORD: btest

    steps:
      - checkout
      - run: go get -v -t -d . ./...
      - run: go get github.com/caarlos0/svu
      - run: svu c ; svu n
      - run: export VER=$( svu n ) ; echo $VER ; go build -i -v -ldflags="-X main.version=$VER" github.com/SpokeyWheeler/batcher
      - run: ./batcher version
      - run: sudo apt update -y
      - run: sudo apt install -y wget postgresql-client mysql-client
      - run: wget -qO- https://binaries.cockroachdb.com/cockroach-v20.2.3.linux-amd64.tgz | tar xvz
      - run: sudo cp -i cockroach-v20.2.3.linux-amd64/cockroach /usr/local/bin/
      - run: cd test; ./create_pops.sh; cd ..
      - run: cd test; ./cockroach.sh; cd ..
      - run: cd test; ./postgres.sh; cd ..
      - run: cd test; ./mysql.sh; cd ..
      - snyk/scan
      - sonarcloud/scan
    working_directory: ~/go/src/github.com/SpokeyWheeler/batcher

  release:
    docker:
    - image: 'cimg/go:1.15.6'
      auth:
        username: $DOCKERUSER
        password: $DOCKERPASS

    - image: circleci/postgres:9.6-alpine-ram
      auth:
        username: $DOCKERUSER
        password: $DOCKERPASS
      environment:
        POSTGRES_USER: btest
        POSTGRES_DB: batchertestdb
        TEST_DATABASE_URL: postgresql://btest@localhost:5432/postgres
        PGDATA: /var/lib/postgresql/9.6/main

    - image: circleci/mysql:latest-ram
      auth:
        username: $DOCKERUSER
        password: $DOCKERPASS
      environment:
        MYSQL_ROOT_PASSWORD: btestroot
        MYSQL_DATABASE: batchertestdb
        MYSQL_USER: btest
        MYSQL_PASSWORD: btest

    steps:
      - checkout
      - run: go get github.com/caarlos0/svu
      - run: go get -v -t -d . ./...
      - run: svu c ; svu n
      - run: curl -sfL https://install.goreleaser.com/github.com/goreleaser/goreleaser.sh | sh
      - run: 
          name: Gorelease (with new version or snapshot)
          command: |
            if [ $( svu c ) != $( svu n ) ]
            then
              export VER=$( svu n )
              echo $VER
              git tag $VER
              git add --all
              git push origin --tags
              ./bin/goreleaser
            else
              ./bin/goreleaser --snapshot --skip-publish --rm-dist
            fi
    working_directory: ~/go/src/github.com/SpokeyWheeler/batcher

orbs:
  snyk: snyk/snyk@0.0.12
  sonarcloud: sonarsource/sonarcloud@1.0.2

version: 2.1

workflows:
  version: 2
  build::
    jobs:
      - build
      - test

  release:
    jobs:
      - test:
          filters:
            branches:
              only: main
            tags:
              only: /^v\d+\.\d+\.\d+$/
      - release:
          requires:
            - test
          filters:
            branches:
              only: main
            tags:
              only: /^v\d+\.\d+\.\d+$/

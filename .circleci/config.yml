---
jobs:
  build:
    docker:
      - image: cimg/go:1.15.6
        auth:
          username: $DOCKERUSER
          password: $DOCKERPASS

    steps:
      - checkout
      - run: go get -v -t -d . ./...
      - run: go get github.com/caarlos0/svu
      - run: svu c ; svu n
      - run: export VER=$( svu n ) ; echo $VER ; go build -i -v -ldflags="-X main.version=$VER" github.com/SpokeyWheeler/batcher
      - run: ./batcher version
    working_directory: ~/go/src/github.com/SpokeyWheeler/batcher

  test:
    docker:
      - image: 'cimg/go:1.15.6'
        auth:
          username: $DOCKERUSER
          password: $DOCKERPASS

      - image: circleci/postgres:9.6-alpine-ram
        auth:
          username: $DOCKERUSER
          password: $DOCKERPASS
        environment:
          POSTGRES_USER: btest
          POSTGRES_DB: batchertestdb
          TEST_DATABASE_URL: postgresql://btest@localhost:5432/postgres
          PGDATA: /var/lib/postgresql/9.6/main

      - image: spokey/circleci-mariadb:latest
        auth:
          username: $DOCKERUSER
          password: $DOCKERPASS
        environment:
          MYSQL_ROOT_PASSWORD: btestroot
          MYSQL_DATABASE: batchertestdb
          MYSQL_USER: btest
          MYSQL_PASSWORD: btest
          MYSQL_PORT: 4306

      - image: circleci/mysql:latest-ram
        auth:
          username: $DOCKERUSER
          password: $DOCKERPASS
        environment:
          MYSQL_ROOT_PASSWORD: btestroot
          MYSQL_DATABASE: batchertestdb
          MYSQL_USER: btest
          MYSQL_PASSWORD: btest

    steps:
      # IBM Legal strikes again!
      # - run: docker run -td --name ifx --privileged -p 9088:9088 -p 9089:9089 -p 27017:27017 -p 27018:27018 -p 27883:27883 -e LICENSE=accept ibmcom/informix-innovator-c:latest
      - checkout
      - run: go get -v -t -d . ./...
      - run: go get github.com/caarlos0/svu
      - run: svu c ; svu n
      - run: export VER=$( svu n ) ; echo $VER ; go build -i -v -ldflags="-X main.version=$VER" github.com/SpokeyWheeler/batcher
      - run: ./batcher version
      - run: sudo apt update -y
      - run: sudo apt install -y wget postgresql-client mysql-client
      - run: wget -qO- https://binaries.cockroachdb.com/cockroach-v20.2.3.linux-amd64.tgz | tar xvz
      - run: sudo cp -i cockroach-v20.2.3.linux-amd64/cockroach /usr/local/bin/
      - run: cd test; ./create_pops.sh; cd ..
      - run: cd test; ./cockroach.sh; cd ..
      - run: cd test; ./postgres.sh; cd ..
      - run: cd test; ./mysql.sh; cd ..
      - run: cd test; ./mariadb.sh; cd ..
      - snyk/scan
      - sonarcloud/scan
      - persist_to_workspace:
          root: .
          paths:
            - "*"
            - .g"*"
            - test/"*"
    working_directory: ~/go/src/github.com/SpokeyWheeler/batcher

  release:
    docker:
      - image: 'cimg/go:1.15.6'
        auth:
          username: $DOCKERUSER
          password: $DOCKERPASS

      - image: circleci/postgres:9.6-alpine-ram
        auth:
          username: $DOCKERUSER
          password: $DOCKERPASS
        environment:
          POSTGRES_USER: btest
          POSTGRES_DB: batchertestdb
          TEST_DATABASE_URL: postgresql://btest@localhost:5432/postgres
          PGDATA: /var/lib/postgresql/9.6/main

      - image: circleci/mysql:latest-ram
        auth:
          username: $DOCKERUSER
          password: $DOCKERPASS
        environment:
          MYSQL_ROOT_PASSWORD: btestroot
          MYSQL_DATABASE: batchertestdb
          MYSQL_USER: btest
          MYSQL_PASSWORD: btest

    steps:
      - attach_workspace:
          at: .
      - run: go get github.com/caarlos0/svu
      - run: curl -sfL https://install.goreleaser.com/github.com/goreleaser/goreleaser.sh | sh
      - run:
          name: Gorelease (with new version or snapshot)
          command: |
            mkdir -p ~/.ssh
            chmod 700 ~/.ssh
            touch ~/.ssh/known_hosts
            chmod 644 ~/.ssh/known_hosts
            echo "github.com,140.82.118.3 ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==" >> ~/.ssh/known_hosts
            git config user.email "12411310+SpokeyWheeler@users.noreply.github.com"
            git config user.name "Spokey Wheeler"
            if [ $( svu c ) != $( svu n ) ]
            then
              git add --all
              git commit -m "CI updates $VER"
              export VER=$( svu n )
              echo $VER
              git tag $VER
              git push origin --tags
              git status
              ./bin/goreleaser
            else
              git add --all
              git commit -m "CI updates $( svu n )"
              ./bin/goreleaser --snapshot --skip-publish --rm-dist
            fi
    working_directory: ~/go/src/github.com/SpokeyWheeler/batcher

orbs:
  snyk: snyk/snyk@0.0.12
  sonarcloud: sonarsource/sonarcloud@1.0.2

version: 2.1

workflows:
  version: 2
  build::
    jobs:
      - build
      - test

  release:
    jobs:
      - test:
          filters:
            branches:
              only: main
            tags:
              only: /^v\d+\.\d+\.\d+$/
      - release:
          requires:
            - test
          filters:
            branches:
              only: main
            tags:
              only: /^v\d+\.\d+\.\d+$/
